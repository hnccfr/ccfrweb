<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head >
	$contain.get('/contain/htmlhead.htm').put('title',$title)
<link rel="stylesheet" href="$appServer.get('styles/zTreeStyle.css')" />
<script type="text/javascript" src="$appServer.get('scripts/jqueryeasyui/jquery-1.4.2.js')"></script>
<script type="text/javascript" src="$appServer.get('scripts/jquery.ztree-2.6.js')"></script>
#set($layout = 'layout/blank.vm')
<script type="text/javascript">
  <!--
	var zTree1;
	var setting;
	var zNodes =[];
	setting = {
			rootPID : -1,
			editable : true,
			edit_removeBtn : false,
			checkable: true,
			checkType:{ "Y": "", "N": "" },
			async: true,
			asyncUrl: "$!{appServer}/test/auth2/treeContent.htm",  //获取节点数据的URL地址
			asyncParam: ["id"],  //获取节点数据时，必须的数据名称，例如：id、name
			callback:{
				beforeRename: zTreeBeforeRename,
				beforeAsync: zTreeBeforeAsync,
				asyncSuccess: zTreeOnAsyncSuccess,
				asyncError: zTreeOnAsyncError
			},
			iconTypes: [
            	{ type:"1", icon:"$!{appServer}/images/zTree/folder_Close.gif", 
            				iconOpen:"$!{appServer}/images/zTree/folder_Open.gif", 
            				iconClose:"$!{appServer}/images/zTree/folder_Close.gif" },
            	{ type:"2", icon:"$!{appServer}/images/zTree/sim/2.png", 
            				iconOpen:"$!{appServer}/images/zTree/flag/2.png", 
            				iconClose:"$!{appServer}/images/zTree/sim/2.png" },
            	{ type:"3", icon:"$!{appServer}/images/zTree/sim/3.png", 
            				iconOpen:"$!{appServer}/images/zTree/flag/3.png", 
            				iconClose:"$!{appServer}/images/zTree/sim/3.png" },
            	{ type:"4", icon:"$!{appServer}/images/zTree/sim/4.png", 
            				iconOpen:"$!{appServer}/images/zTree/flag/4.png", 
            				iconClose:"$!{appServer}/images/zTree/sim/4.png" }
            ]
	};
	var opreatePool = [];
	var lastNode = null;
	var poolCursor = -1;
	var poolMax = 20;
	
	function zTreeBeforeRename( treeId, treeNode ){
		parent.authMainIframe.location.href = "$!{appServer}/test/auth2/edit.htm?id=" + treeNode.id;
		return false;
	}
	
	$(document).ready(function(){
		refreshTree();
	});

	function zTreeBeforeAsync(treeId, treeNode) {
		var hasParent = isParent( treeNode );
		if( !hasParent ){
			return false;
		}
		treeNode.isParent = hasParent;
	}
	function isParent( treeNode ){
		if( treeNode.type == "4" ){
			return false;
		}
		result = true;
		jQuery.ajax({
			async: false,
			type: "POST",
			url: "$!{appServer}/test/auth2/isParent.htm",
			data: { id:treeNode.id },
			success: function( data ) {
				try {
					result = data;
				} catch(err) {
					result = false;
				}
			},
			error: function(XMLHttpRequest, textStatus, errorThrown) {
				result = false;
			}
		});
		return result;
	}
	
	function zTreeOnAsyncSuccess(event, treeId, treeNode, msg) {
		if (treeNode) {
			$("#onAsyncSuccessNode").html( "[" + getTime() + "]  treeId=" + treeId + ";<br/>&nbsp;tId=" + treeNode.tId + "; Name=" + treeNode.name );
		} else {
			$("#onAsyncSuccessNode").html( "[" + getTime() + "]  treeNode is Root!");
		}
	}

	function zTreeOnAsyncError(event, treeId, treeNode, XMLHttpRequest, textStatus, errorThrown) {
		if (treeNode) {
			$("#onAsyncErrorNode").html( "[" + getTime() + "]  treeId=" + treeId + ";<br/>&nbsp;tId=" + treeNode.tId + "; Name=" + treeNode.name );
		} else {
			$("#onAsyncErrorNode").html( "[" + getTime() + "]  treeNode is Root!");
		}
	}

	function refreshTree(asyncUrl) {
		$("#getUrl").html("");
		$("#onAsyncSuccessNode").html("<br/>");
		$("#onAsyncErrorNode").html("<br/>");
		zNodes =[
			{ name:"统一登录系统", 	id:"1", pId:"-1", type:"1" },
			{ name:"会员管理一一", 	id:"2", pId:"1", type:"1" },
			{ name:"后台管理系统", 	id:"3", pId:"1", type:"1" },
			{ name:"前台门户", 		id:"4", pId:"1", type:"1" } 
			];
		zTree1 = $("#treeDemo").zTree(setting, zNodes);
	}

	function reloadAsync() {
		alert( "in reloadAsync!!!" );
		var treeNode = zTree1.getSelectedNode();
		if (!treeNode) {
			alert("请先选中一个节点");
			return;
		}
		var parent = isParent( treeNode );;
		if( !parent ){
			return false;
		}
		treeNode.isParent = parent;
		zTree1.reAsyncChildNodes(treeNode, "add");//$("#refreshType").attr("checked") ? "refresh" : 
	}
	function getTime() {
		var now= new Date();
		var hour=now.getHours();
		var minute=now.getMinutes();
		var second=now.getSeconds();
		return (hour+":"+minute+":"+second);	
	}
	function expandAll(expandSign) {
		zTree1.expandAll(expandSign);
	}
	function moveTreeNode(move) {
		var srcNode = zTree1.getSelectedNode();
		if (!srcNode) {
			alert("请先选中一个节点");
			return;
		}
		var moveType = "inner";
		var targetNode = "";
		if (move == "up") {
			moveType = "before";
			targetNode = getPreTreeNode(srcNode);
		} else if (move == "down") {
			moveType = "after";
			targetNode = getNextTreeNode(srcNode);
		}
		if (srcNode && targetNode) {
			setOperatePool();
			zTree1.moveNode(targetNode, srcNode, moveType);
		}	
		getNodes();
		zTree1.selectNode(srcNode);
	}
	function getPreTreeNode(treeNode) {
		if (treeNode.isFirstNode) return null;
		var nodes = treeNode.parentNode ? treeNode.parentNode.nodes : zTree1.getNodes();
		var preNode;
		for (var i=0; i<nodes.length; i++) {
			if (nodes[i] == treeNode) {
				return preNode;
			}
			preNode = nodes[i];
		}
	}
	function getNextTreeNode(treeNode) {
		if (treeNode.isLastNode) return null;
		var nodes = treeNode.parentNode ? treeNode.parentNode.nodes : zTree1.getNodes();
		for (var i=0; i<nodes.length; i++) {
			if (nodes[i] == treeNode) {
				return nodes[i+1];
			}
		}
	}
	function setOperatePool(nodes) {
		var n = nodes ? nodes : clone(zTree1.getNodes());
		opreatePool.splice(poolCursor+1, (opreatePool.length-poolCursor-1), n);
		if (opreatePool.length>poolMax) {
			opreatePool.splice(0,1);
		}
		poolCursor = opreatePool.length-1;
		refreshOperatePool();
		lastNode = null;
	}
	function refreshOperatePool() {
		if (poolCursor>=0) {
			$("#jRollback").attr("class","able");
		} else {
			$("#jRollback").attr("class","disabled");
		}
		if (poolCursor<(opreatePool.length-1)) {
			$("#jRedo").attr("class","able");
		} else {
			$("#jRedo").attr("class","disabled");
		}
		$("#jOperatePool").html("操作记录: " + opreatePool.length + ", 游标位置: " + (poolCursor+1));
	}
	function getNodes() {
		var a = zTree1.transformToArray(zTree1.getNodes());
		$("#allNum").html(a.length);
		a = zTree1.getCheckedNodes();
		$("#allCheckNum").html(a.length);
	}
//-->
  </SCRIPT>
</head>
<body style="padding:10px;overflow:auto;">
	<div class="demoContent">
		<li>
			<ul class="operate">
				<button class="ico expandNode" onfocus="this.blur();" title="张开已载入" onclick="expandAll(true);"></button>
				<button class="ico collapseNode" onfocus="this.blur();" title="折叠已载入" onclick="expandAll(false);"></button>
				<button class="ico up" onfocus="this.blur();" title="同级向上移动" onclick="moveTreeNode('up');"></button>
				<button class="ico down" onfocus="this.blur();" title="同级向下移动" onclick="moveTreeNode('down');"></button>
			</ul>
		</li>
	</div>
	<ul id="treeDemo" class="tree" style="width:100%;height:100%overflow:auto;"></ul>
</body>
</html>