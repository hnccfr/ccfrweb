<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SYSTEM_MESSAGE" >
  <resultMap id="BaseResultMap" class="com.hundsun.network.gates.fengshan.biz.domain.message.SystemMessage" >
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="RECEIVE_ACCOUNT" property="receiveAccount" jdbcType="VARCHAR" />
    <result column="SEND_ACCOUNT" property="sendAccount" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="SEND_TIME" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 由于查询列表的时候要丢弃一个大字段，因此专门建一个不含content大字段的resultMap -->
  <resultMap id="ListResultMap" class="com.hundsun.network.gates.fengshan.biz.domain.message.SystemMessage" >
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="RECEIVE_ACCOUNT" property="receiveAccount" jdbcType="VARCHAR" />
    <result column="SEND_ACCOUNT" property="sendAccount" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="SEND_TIME" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="SYSTEM_MESSAGE.Base_Column_List" >
    ID, RECEIVE_ACCOUNT, SEND_ACCOUNT, MESSAGE_ID, STATUS, SEND_TIME, TITLE, CONTENT
  </sql>

  <!-- 根据ID查找站内信 -->
  <select id="SYSTEM_MESSAGE.selectByPrimaryKey" resultMap="BaseResultMap" parameterClass="java.lang.Long" >
    select 
    t_sm.id, t_sm.receive_account, t_sm.send_account, t_sm.status, t_sm.send_time, t_smt.title, t_smt.content
    from system_message t_sm, system_message_text t_smt
    where t_sm.message_id = t_smt.id and t_sm.id = #id:DECIMAL#
  </select>
  
  <!-- 查询条件 -->
  <sql id="Where_Clause">
   	<isNotEmpty prepend="and" property="title">
  		t_smt.title like '%$title$%'
  	</isNotEmpty>
   	<isNotEmpty prepend="and" property="status">
  		t_sm.status = #status#
  	</isNotEmpty>
  	<isNotEmpty prepend="and" property="sendAccount">
  		t_sm.send_account like '%$sendAccount$%'
  	</isNotEmpty>
  	<isNotEmpty prepend="and" property="beginTime">
  		<![CDATA[t_sm.send_time >= #beginTime#]]>
  	</isNotEmpty>
  	<isNotEmpty prepend="and" property="endTime">
  		<![CDATA[ TRUNC(t_sm.send_time) <= TRUNC(#endTime#) ]]>
  	</isNotEmpty>
  </sql>
  
  <!-- 查询站内信列表 -->
  <select id="SYSTEM_MESSAGE.selectListByQuery" resultMap="ListResultMap" parameterClass="com.hundsun.network.gates.fengshan.biz.domain.query.SystemMessageQuery" >
	<![CDATA[
		SELECT * FROM (SELECT ROWNUM AS NUMROW, p.* from   ( 
    		select 
    		t_sm.id, t_sm.receive_account, t_sm.send_account, t_sm.status, t_sm.send_time, t_smt.title
    		from system_message t_sm, system_message_text t_smt
    		where t_sm.message_id = t_smt.id and t_sm.receive_account= #receiveAccount#]]>
		<include refid="Where_Clause"/>
	<![CDATA[
		order by t_sm.send_time desc
	]]>
	<![CDATA[
		) p  where rownum<=#endIndex#) WHERE NUMROW >= #beginIndex#
	]]>
  </select>
  
  <!-- 查询站内信的总条数 -->
  <select id="SYSTEM_MESSAGE.selectListCountByQuery" resultClass="java.lang.Integer" parameterClass="com.hundsun.network.gates.fengshan.biz.domain.query.SystemMessageQuery">
	select count(t_sm.id) from system_message t_sm, system_message_text t_smt
	where t_sm.message_id = t_smt.id and t_sm.receive_account= #receiveAccount#
	<include refid="Where_Clause"/>
  </select>
  
  <!-- 删除用户指定的站内信 -->
  <delete id="SYSTEM_MESSAGE.deleteByPrimaryKey" parameterClass="java.lang.Long" >
    delete from SYSTEM_MESSAGE
    where ID = #id:DECIMAL#
  </delete>
  
  <!-- 将未读的站内信标志为已读 -->
  <update id="SYSTEM_MESSAGE.updateStatusByPrimaryKey" parameterClass="java.lang.Long">
  	update system_message set status = 'Y' where id = #id:DECIMAL#
  </update>
</sqlMap>